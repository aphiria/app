{
    "name": "aphiria/app",
    "description": "The Aphiria skeleton application",
    "keywords": [
        "PHP",
        "skeleton",
        "API"
    ],
    "authors": [
        {
            "name": "David Young",
            "email": "dave@aphiria.com",
            "role": "Architect"
        }
    ],
    "license": "MIT",
    "autoload": {
        "psr-4": {
            "App\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests"
        }
    },
    "require": {
        "aphiria/aphiria": "1.x-dev",
        "ext-mbstring": "*",
        "ext-pdo": "*",
        "ext-sqlite3": "*",
        "php": ">=8.2",
        "robmorgan/phinx": "0.x-dev",
        "symfony/dotenv": "^6.1"
    },
    "require-dev": {
        "friendsofphp/php-cs-fixer": "^3.2",
        "phpunit/phpunit": "^10.1",
        "vimeo/psalm": "^5.1"
    },
    "scripts": {
        "phpcs-test": "@phpcs-fix --dry-run",
        "phpcs-fix": "php-cs-fixer fix --config=.php-cs-fixer.dist.php -v --diff",
        "phpunit": "XDEBUG_MODE=coverage php vendor/phpunit/phpunit/phpunit --coverage-clover=./.coverage/clover.xml",
        "post-root-package-install": [
            "php -r \"file_exists('.env') || copy('.env.dist', '.env');\""
        ],
        "post-create-project-cmd": [
            "php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "php -r \"echo 'Important: make ' . __DIR__ . DIRECTORY_SEPARATOR . 'tmp writable' . PHP_EOL;\"",
            "php aphiria user:generate-default-credentials"
        ],
        "post-install-cmd": [
            "php -r \"shell_exec((file_exists(getcwd() . '/composer.phar') ? PHP_BINARY . ' composer.phar' : 'composer') . ' dump-autoload -o');\"",
            "php -r \"file_exists('.env') || copy('.env.dist', '.env');\""
        ],
        "post-update-cmd": [
            "php -r \"shell_exec((file_exists(getcwd() . '/composer.phar') ? PHP_BINARY . ' composer.phar' : 'composer') . ' dump-autoload -o');\"",
            "php -r \"file_exists('.env') || copy('.env.dist', '.env');\""
        ],
        "psalm": [
            "Composer\\Config::disableProcessTimeout",
            "php vendor/vimeo/psalm/psalm"
        ],
        "test": [
            "@phpunit",
            "@phpcs-test",
            "@psalm"
        ]
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.x-dev"
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "prefer-stable": true,
    "minimum-stability": "dev"
}
